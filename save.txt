function [SR_RS_4]=sumRateRS_4(Pt,Pr,h1,h2,h3,g1,g2,NT,p_1_ini,p_2_ini,p_c_ini,theta_ini,ind_relay,tolerance,num_iter,epsilon_1,epsilon_2)
%% introduced parameters
% 计算初始值的时候 先用g1,g2的估计值来代替g1,g2
T_1=abs(h1*p_1_ini)^2+abs(h1*p_2_ini)^2+1;
T_2=abs(h2*p_1_ini)^2+abs(h2*p_2_ini)^2+1;
T_3=abs(g1*p_1_ini)^2+abs(g1*p_2_ini)^2+1;
T_4=abs(g1*p_1_ini)^2;
T_5=abs(g1*p_2_ini)^2;
T_c_1=abs(h1*p_c_ini)^2;
T_c_2=abs(h2*p_c_ini)^2;
T_c_3=abs(g1*p_c_ini)^2;
I_1=T_1-abs(h1*p_1_ini)^2;
I_2=T_2-abs(h2*p_2_ini)^2;
I_3=T_3-abs(g1*p_1_ini)^2+T_c_3;
I_4=T_3-abs(g1*p_2_ini)^2+T_c_3;

% \rho_c=[rho_c_1_ini,rho_c_2_ini,rho_c_e_ini_1,rho_c_e_ini_2]
rho_c_1_ini=T_c_1/T_1;
rho_c_2_ini=T_c_2/T_2;
rho_c_e_ini_1=T_c_3/T_3;
rho_c_e_ini_2=Pr*abs(g2)^2;


% \rho_p=[rho_p_1_ini,rho_p_2_ini,rho_1_e_ini,rho_2_e_ini]
rho_p_1_ini=T_1/I_1-1;
rho_p_2_ini=T_2/I_2-1;
rho_1_e_ini=T_4/I_3;
rho_2_e_ini=T_5/I_4;

beta_c_1_ini=log2(1+rho_c_1_ini);
beta_c_2_ini=log2(1+rho_c_2_ini);
beta_c_e_ini_1=log2(1+rho_c_e_ini_1);
beta_c_e_ini_2=log2(1+rho_c_e_ini_2);

beta_p_1_ini=log2(1+rho_p_1_ini);
beta_p_2_ini=log2(1+rho_p_2_ini);
beta_1_e_ini=log2(1+rho_1_e_ini);
beta_2_e_ini=log2(1+rho_2_e_ini);

p_1=sdpvar(NT,1,'full','complex');
p_2=sdpvar(NT,1,'full','complex');
p_c=sdpvar(NT,1,'full','complex');
t=sdpvar;
theta=sdpvar;
alpha_p_1=sdpvar;
alpha_p_2=sdpvar;
alpha_1_e=sdpvar;
alpha_2_e=sdpvar;   
alpha_c_1=sdpvar;
alpha_c_2=sdpvar;
alpha_c_e=sdpvar;

beta_p_1=sdpvar;
beta_p_2=sdpvar;
beta_1_e=sdpvar;
beta_2_e=sdpvar;   
beta_c_1=sdpvar;
beta_c_2=sdpvar;
beta_c_e_1=sdpvar;
beta_c_e_2=sdpvar;

rho_p_1=sdpvar;
rho_p_2=sdpvar;
rho_1_e=sdpvar;
rho_2_e=sdpvar;   
rho_c_1=sdpvar;
rho_c_2=sdpvar;
rho_c_e_1=sdpvar;
rho_c_e_2=sdpvar;

delta_1 = sdpvar;
delta_2 = sdpvar;
delta_3 = sdpvar;

%  ops = sdpsettings('solver','fmincon','fmincon.Algorithm','sqp','fmincon.MaxIter',Inf,'fmincon.MaxFunEvals',Inf,'verbose',0);
% ops = sdpsettings('solver','fmincon','fmincon.MaxIter',Inf,'fmincon.MaxFunEvals',Inf,'verbose',1);
ops = sdpsettings('verbose',0);
Objective = t;  
% if ind_relay==1
%     Rc1=theta*log2(1+(abs(h1*p_c)^2)/((abs(h1*p_1)^2)+(abs(h1*p_2)^2)+1));
%     Rc2=theta*log2(1+(abs(h2*p_c)^2)/(abs(h2*p_1)^2+abs(h2*p_2)^2+1))+...
%         (1-theta)*log2(1+Pr*abs(h3)^2);
% else
%     Rc1=theta*log2(1+(abs(h1*p_c)^2)/((abs(h1*p_1)^2)+(abs(h1*p_2)^2)+1))+...
%         (1-theta)*log2(1+Pr*abs(h3)^2);
%     Rc2=theta*log2(1+(abs(h2*p_c)^2)/(abs(h2*p_1)^2+abs(h2*p_2)^2+1));
% end       

% Cce=theta*log2(1+abs(g1*p_c)^2/(abs(g1*p_1)^2+abs(g1*p_2)^2+1))+...
%     (1-theta)*log2(1+Pr*abs(g2)^2);
% Rp1=(theta*log2(1+abs(h1*p_1)^2/(abs(h1*p_2)^2+1)));
% Rp2=(theta*log2(1+abs(h2*p_2)^2/(abs(h2*p_1)^2+1)));
% 
% C1e=theta*log2(1+abs(g1*p_1)^2/(abs(g1*p_c)^2+abs(g1*p_2)^2+1));
% C2e=theta*log2(1+abs(g1*p_2)^2/(abs(g1*p_c)^2+abs(g1*p_1)^2+1));
% 
% Rc_Cce=min(Rc1,Rc2)-Cce;
% Rp1_C1e=Rp1-C1e;
% Rp2_C2e=Rp2-C2e;

loop=1;
t_past=0;
count=0;

while (loop)
      
    %constraints    
    constraints(1)=-theta;
    constraints(2)=theta-1;
    
    constraints(3)=-delta_1;
    constraints(4)=-delta_2;
    constraints(5)=-delta_3;
    
    
    constraints(6)=-alpha_p_1;
    constraints(7)=-alpha_p_2;
    constraints(8)=-alpha_1_e;
    constraints(9)=-alpha_2_e;
    constraints(10)=-alpha_c_1;
    constraints(11)=-alpha_c_2;
    constraints(12)=-alpha_c_e;
    
    constraints(13)=-beta_p_1;
    constraints(14)=-beta_p_2;
    constraints(15)=-beta_1_e;
    constraints(16)=-beta_2_e;
    constraints(17)=-beta_c_1;
    constraints(18)=-beta_c_2;
    constraints(19)=-beta_c_e_1; 
    constraints(20)=-beta_c_e_2; 
    
    constraints(21)=-rho_p_1+1e-6;
    constraints(22)=-rho_p_2+1e-6;
    constraints(23)=-rho_1_e+1e-6;
    constraints(24)=-rho_2_e+1e-6;
    constraints(25)=-rho_c_1+1e-6;
    constraints(26)=-rho_c_2+1e-6;
    constraints(27)=-rho_c_e_1+1e-6;
    constraints(28)=-rho_c_e_2+1e-6;

    constraints(29)=p_1'*p_1+p_2'*p_2+p_c'*p_c-Pt; % Quadratic scalar (real, 24 variables)

    constraints(30)=-0.5*(theta_ini+beta_p_1_ini)*(theta+beta_p_1)+0.25*(theta_ini+beta_p_1_ini)^2+0.25*(theta-beta_p_1)^2+alpha_p_1; % Quadratic scalar (real, 3 variables)
    constraints(31)=-0.5*(theta_ini+beta_p_2_ini)*(theta+beta_p_2)+0.25*(theta_ini+beta_p_2_ini)^2+0.25*(theta-beta_p_2)^2+alpha_p_2;

    if ind_relay==1     
        constraints(32)=-0.5*(theta_ini+beta_c_1_ini)*(theta+beta_c_1)+0.25*(theta_ini+beta_c_1_ini)^2+0.25*(theta-beta_c_1)^2+alpha_c_1;
        constraints(33)=-0.5*(theta_ini+beta_c_2_ini)*(theta+beta_c_2)+0.25*(theta_ini+beta_c_2_ini)^2+0.25*(theta-beta_c_2)^2-(1-theta)*log2(1+Pr*(h3'*h3))+alpha_c_2;  
     else
        constraints(32)=-0.5*(theta_ini+beta_c_1_ini)*(theta+beta_c_1)+0.25*(theta_ini+beta_c_1_ini)^2+0.25*(theta-beta_c_1)^2-(1-theta)*log2(1+Pr*(h3'*h3))+alpha_c_1;
        constraints(33)=-0.5*(theta_ini+beta_c_2_ini)*(theta+beta_c_2)+0.25*(theta_ini+beta_c_2_ini)^2+0.25*(theta-beta_c_2)^2+alpha_c_2;
     end
    constraints(34)=-0.5*(theta_ini-beta_1_e_ini)*(theta-beta_1_e)+0.25*(theta_ini-beta_1_e_ini)^2+0.25*(theta+beta_1_e)^2-alpha_1_e;
    constraints(35)=-0.5*(theta_ini-beta_2_e_ini)*(theta-beta_2_e)+0.25*(theta_ini-beta_2_e_ini)^2+0.25*(theta+beta_2_e)^2-alpha_2_e;
    constraints(36)=-0.5*(theta_ini-beta_c_e_ini_1)*(theta-beta_c_e_1)+0.25*(theta_ini-beta_c_e_ini_1)^2+0.25*(theta+beta_c_e_1)^2-alpha_c_e-0.5*(theta_ini+beta_c_e_ini_2)*(theta+beta_c_e_2)+0.25*(theta_ini+beta_c_e_ini_2)^2+0.25*(theta-beta_c_e_2)^2;

    constraints(37)=alpha_c_e-alpha_c_1; % Linear scalar (real, 2 variables)
    constraints(38)=alpha_c_e-alpha_c_2;
    
    % Quadratic scalar (real)
    constraints(39)=((h1*p_2)'*(h1*p_2))+1-2*real(p_1_ini'*h1'*h1*p_1)/rho_p_1_ini+((h1*p_1_ini)'*(h1*p_1_ini))*rho_p_1/(rho_p_1_ini^2);
    constraints(40)=((h2*p_1)'*(h2*p_1))+1-2*real(p_2_ini'*h2'*h2*p_2)/rho_p_2_ini+((h2*p_2_ini)'*(h2*p_2_ini))*rho_p_2/(rho_p_2_ini^2);  
    constraints(41)=((h1*p_1)'*(h1*p_1))+((h1*p_2)'*(h1*p_2))+1-2*real(p_c_ini'*h1'*h1*p_c)/rho_c_1_ini+((h1*p_c_ini)'*(h1*p_c_ini))*rho_c_1/(rho_c_1_ini^2);
    constraints(42)=((h2*p_1)'*(h2*p_1))+((h2*p_2)'*(h2*p_2))+1-2*real(p_c_ini'*h2'*h2*p_c)/rho_c_2_ini+((h2*p_c_ini)'*(h2*p_c_ini))*rho_c_2/(rho_c_2_ini^2);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% rewrite begin %%%%%%%%%%%%%%%%
    % Signomial scalar(real)
%     constraints(38)=-rho_1_e*(2*real(p_c_ini'*g1'*g1*p_c+p_2_ini'*g1'*g1*p_2)-((g1*p_c_ini)'*(g1*p_c_ini))-((g1*p_2_ini)'*(g1*p_2_ini))+1)+((g1*p_1)'*(g1*p_1));%/rho_1_e;  
%     constraints(39)=-rho_2_e*(2*real(p_c_ini'*g1'*g1*p_c+p_1_ini'*g1'*g1*p_1)-((g1*p_c_ini)'*(g1*p_c_ini))-((g1*p_1_ini)'*(g1*p_1_ini))+1)+((g1*p_2)'*(g1*p_2));%/rho_2_e; 
%     constraints(40)=-rho_c_e*(2*real(p_1_ini'*g1'*g1*p_1+p_2_ini'*g1'*g1*p_2)-((g1*p_1_ini)'*(g1*p_1_ini))-((g1*p_2_ini)'*(g1*p_2_ini))+1)+((g1*p_c)'*(g1*p_c));%/rho_c_e;  
    constraints(43)=-(((g1*p_c_ini)'*(g1*p_c_ini)+(g1*p_2_ini)'*(g1*p_2_ini))*(rho_1_e-2*rho_1_e_ini)+rho_1_e+2*rho_1_e_ini*real(p_c_ini'*g1'*g1*p_c+p_2_ini'*g1'*g1*p_2))+(g1*p_1)'*(g1*p_1);
    constraints(44)=-(((g1*p_c_ini)'*(g1*p_c_ini)+(g1*p_1_ini)'*(g1*p_1_ini))*(rho_2_e-2*rho_2_e_ini)+rho_2_e+2*rho_2_e_ini*real(p_c_ini'*g1'*g1*p_c+p_1_ini'*g1'*g1*p_1))+(g1*p_2)'*(g1*p_2);
    constraints(45)=-(((g1*p_1_ini)'*(g1*p_1_ini)+(g1*p_2_ini)'*(g1*p_2_ini))*(rho_c_e_1-2*rho_c_e_ini_1)+rho_c_e_1+2*rho_c_e_ini_1*real(p_1_ini'*g1'*g1*p_1+p_2_ini'*g1'*g1*p_2))+(g1*p_c)'*(g1*p_c);
%%%%%%%%%%%%%%%%%%%%%%%%%%%% rewrite end %%%%%%%%%%%%%%%%%%%%%%%
    % Linear scalar (real)   
    constraints(46)=1+rho_1_e-(1+log(2)*(beta_1_e-beta_1_e_ini))*exp(beta_1_e_ini*log(2));
    constraints(47)=1+rho_2_e-(1+log(2)*(beta_2_e-beta_2_e_ini))*exp(beta_2_e_ini*log(2));
    constraints(48)=1+rho_c_e_1-(1+log(2)*(beta_c_e_1-beta_c_e_ini_1))*exp(beta_c_e_ini_1*log(2));  
    constraints(49)=1+rho_c_e_2-(1+log(2)*(beta_c_e_2-beta_c_e_ini_2))*exp(beta_c_e_ini_2*log(2));   
    
    % Nonlinear scalar (real)
    constraints(50)=exp(beta_p_1*log(2))-(1+rho_p_1); 
    constraints(51)=exp(beta_p_2*log(2))-(1+rho_p_2);
    constraints(52)=exp(beta_c_1*log(2))-(1+rho_c_1);
    constraints(53)=exp(beta_c_2*log(2))-(1+rho_c_2);
    constraints(54)=t-(min(alpha_c_1,alpha_c_2)-alpha_c_e+alpha_p_1-alpha_1_e);
    constraints(55)=t-(min(alpha_c_1,alpha_c_2)-alpha_c_e+alpha_p_2-alpha_2_e);
%     constraints(48)=-alpha_p_1+alpha_1_e;
%     constraints(49)=-alpha_p_2+alpha_2_e;

%     constraints(48)=-Rp1_C1e;
%     constraints(49)=-Rp2_C2e;

    Constraints=[constraints(1:55)<=0];
    
    P = optimize(Constraints,-Objective,ops);

    if abs(value(Objective)-t_past)<=tolerance
        loop=0;
    else
        t_past=value(Objective);
        count=count+1;
        p_1_ini=value(p_1);
        p_2_ini=value(p_2);
        p_c_ini=value(p_c);
        theta_ini=value(theta);
        beta_p_1_ini=value(beta_p_1);
        beta_p_2_ini=value(beta_p_2);
        beta_1_e_ini=value(beta_1_e);
        beta_2_e_ini=value(beta_2_e);
        beta_c_1_ini=value(beta_c_1);
        beta_c_2_ini=value(beta_c_2);
        beta_c_e_ini_1=value(beta_c_e_1);

        rho_p_1_ini=value(rho_p_1);
        rho_p_2_ini=value(rho_p_2);
        rho_1_e_ini=value(rho_1_e);
        rho_2_e_ini=value(rho_2_e);
        rho_c_1_ini=value(rho_c_1);
        rho_c_2_ini=value(rho_c_2);
        rho_c_e_ini_1=value(rho_c_e_1);
    end
%     
%     if rho_p_1_ini<=1e-4
%         break;
%     end
%     if rho_p_2_ini<=1e-4
%         break;
%     end
    
    if count>=num_iter
        break;
    end
end

%% show the outputs
% value_Rc_Cce=value(Rc_Cce);
% value_Rp1_C1e=value(Rp1_C1e);
% value_Rp2_C2e=value(Rp2_C2e);

% if value_Rp1_C1e<=0 && value_Rp2_C2e<=0
%     SR_RS_4=value_Rc_Cce;
% end
% if value_Rp1_C1e>=0 && value_Rp2_C2e<=0
%     SR_RS_4=value_Rc_Cce+value_Rp1_C1e;
% end
% if value_Rp1_C1e<=0 && value_Rp2_C2e>=0
%     SR_RS_4=value_Rc_Cce+value_Rp2_C2e;
% end
% if value_Rp1_C1e>=0 && value_Rp2_C2e>=0
%     SR_RS_4=value_Rc_Cce+value_Rp1_C1e+value_Rp2_C2e;
% end
SR_RS_4=value(t);
ratio_comm=value(p_c'*p_c)/Pt;
theta_opt=value(theta);

fprintf('RS_4 : theta_4= %1.3f,rate_4= %1.3E,ratio_4=%1.3f \n',[theta_opt SR_RS_4 ratio_comm]);
end